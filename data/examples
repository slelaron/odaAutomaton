// integers sum - 3 states
//00 -> a
//01 -> b
//10 -> c
//11 -> d

6
acdcbbadbcddbaba
1001111100101010
acbdacbddadbbaad
1000100101011010
aadbcddcacabdabda
01100101011001000
aaa
000
addd
1110
accbcccbbcccbcd
100000000000000

//reverse integers sum - 2 states

6
ababddcbdabbcdca
0101010011111001
daabbdaddbcadbca
0101101010010001
adbadbacacddcbdaa
00010011010100110
aaa
000
ddda
0111
dcbcccbbcccbcca
000000000000001

// 2 * x + 1

6
01101011100010110100010101100111
11010111000101101000101011001111
00110010011110110010001111000110
01100100111101100100011110001101
01100100001111001001100001101001
11001000011110010011000011010011
01100110001100110100100001110011
11001100011001101001000011100111
01110100101100001101110001010001
11101001011000011011100010100011
00011001010010010101110011111111
00110010100100101011100111111111
00101010111010001001010001001010
01010101110100010010100010010101
0
1

//xor - number = first|second
        answer = 00000|third

6
1110
0001
0111
0010
1000
0010
0101
0000
1011
0001
0010
0010